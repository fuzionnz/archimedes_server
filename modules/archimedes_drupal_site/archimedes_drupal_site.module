<?php

include_once('archimedes_drupal_site.features.inc');

define('DRUPAL_SITE_MODULE_VID', db_result(db_query("SELECT vid FROM {vocabulary} WHERE module = '%s'", 'features_drupal_major_version')));

/**
 * Implementation of hook_menu().
 */
function archimedes_drupal_site_menu() {
  $items['node/%node/drupal-modules'] = array(
    'title' => 'Modules',
    'description' => 'view currently enabled modules',
    'page callback' => 'archimedes_drupal_site_modules',
    'page arguments' => array(1),
    'access callback' => 'archimedes_drupal_site_has_module_tab',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'archimedes_drupal_site.pages.inc',
  );
  $items['node/%/revisions/%/drupal-modules'] = $items['node/%node/drupal-modules'];
  $items['node/%/revisions/%/drupal-modules']['page arguments'] = array(1,3);
  $items['node/%/revisions/%/drupal-modules']['access arguments'] = array(1,3);
  return $items;
}

/**
 * Access callback for modules page.
 */
function archimedes_drupal_site_has_module_tab($node, $vid = FALSE) {
  if ($vid) {
    $node = node_load($node, $vid);
  }
  if (isset($node->field_drupal_mod) && !empty($node->field_drupal_mod)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implementation of hook_nodeapi().
 */
function archimedes_drupal_site_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'load':
      $rs = db_query("SELECT n.title, a.type, a.cvid FROM {node_revisions} n INNER JOIN {archimedes_drupal_modules} a ON n.vid = a.cvid WHERE a.vid = %d ORDER BY n.title ASC", $node->vid);
      while ($row = db_fetch_object($rs)) {
        $node->{$row->type}[] = array('vid' => $row->cvid, 'value' => $row->title);
      }
      if (strpos($node->type, 'drupal') !== FALSE) {
        $rs = db_query("SELECT vid, type FROM {archimedes_drupal_modules} WHERE cvid = %d", $node->vid);
        while ($row = db_fetch_object($rs)) {
          $node->{$row->type . '_reference'}[] = $row->vid;
        }
        include_once dirname(__FILE__) . '/archimedes_drupal_site.update.inc';
        $node->available = _archimedes_drupal_site_project_status($node);

//        module_load_include('inc', 'archimedes_drupal_site');
//        $node->project_status = archimedes_drupal_site_project_status($node->field_dru_proj[0]['value'], $node->field_mod_version[0]['value']);
      }
    break;
    case 'insert':
    case 'update':
      if ($node->type == 'application' && isset($node->field_drupal_mod)) {
        db_query("DELETE FROM {archimedes_drupal_modules} WHERE vid = %d", $node->vid);
        foreach ($node->field_drupal_mod as $field) {
          db_query("INSERT INTO {archimedes_drupal_modules} (nid, vid, type, cvid) VALUES (%d, %d, 'field_drupal_mod', %d)", $node->nid, $node->vid, $field['vid']);
        } 
      }
      if ($node->type == 'application' && isset($node->field_drupal_theme)) {
        db_query("DELETE FROM {archimedes_drupal_modules} WHERE vid = %d", $node->vid);
        foreach ($node->field_drupal_mod as $field) {
          db_query("INSERT INTO {archimedes_drupal_modules} (nid, vid, type, cvid) VALUES (%d, %d, 'field_drupal_theme', %d)", $node->nid, $node->vid, $field['vid']);
        } 
      }
    break;
  }
}

/**
 * Implementation of hook_cron().
 */
function archimedes_drupal_site_cron() {
  archimedes_drupal_site_project_updates();
}

/**
 * Implementation of hook_archimedes_server_plugins().
 */
function archimedes_drupal_site_archimedes_server_plugins() {
  return array(
    'drupal-module',
  );
}

/**
 * Implementation of archimedes_site_alter
 */
function archimedes_drupal_site_archimedes_site_alter(&$node, $op) {

  if ($op == 'pre' && $version = $node->field_drupal_version[0]['value']) {
    $terms = taxonomy_get_term_by_name('drupal-' . substr($version,0,1) . '.x');
    $term_exists = FALSE;
    foreach ($terms as $term) {
      if ($term->vid == DRUPAL_SITE_MODULE_VID) {
        $term_exists = TRUE;
        $terms = array($term);
        break;
      }
    }
    if (!$term_exists) {
      // Create term here.
      $term = array(
        'vid' => DRUPAL_SITE_MODULE_VID,
        'name' => 'drupal-' . substr($version,0,1) . '.x',
      );
      taxonomy_save_term($term);
      $terms = array($term);
    }
    node_save($node);

    taxonomy_node_save($node,$terms);
  }
  //module_load_include('inc', 'archimedes_drupal_site');
  //archimedes_drupal_site_check_modules($node);
}

